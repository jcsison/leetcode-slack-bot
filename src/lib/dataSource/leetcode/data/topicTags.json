[
  {
    "id": "VG9waWNUYWdOb2RlOjU=",
    "name": "Array",
    "slug": "array"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjEw",
    "name": "String",
    "slug": "string"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjY=",
    "name": "Hash Table",
    "slug": "hash-table"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjEz",
    "name": "Dynamic Programming",
    "slug": "dynamic-programming"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjg=",
    "name": "Math",
    "slug": "math"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjIx",
    "name": "Depth-First Search",
    "slug": "depth-first-search"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
    "name": "Sorting",
    "slug": "sorting"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjE3",
    "name": "Greedy",
    "slug": "greedy"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDQz",
    "name": "Database",
    "slug": "database"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjIy",
    "name": "Breadth-First Search",
    "slug": "breadth-first-search"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjIw",
    "name": "Tree",
    "slug": "tree"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjEx",
    "name": "Binary Search",
    "slug": "binary-search"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDUz",
    "name": "Matrix",
    "slug": "matrix"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDU3",
    "name": "Binary Tree",
    "slug": "binary-tree"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjk=",
    "name": "Two Pointers",
    "slug": "two-pointers"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjE5",
    "name": "Bit Manipulation",
    "slug": "bit-manipulation"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjE1",
    "name": "Stack",
    "slug": "stack"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDUw",
    "name": "Heap (Priority Queue)",
    "slug": "heap-priority-queue"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjI1",
    "name": "Design",
    "slug": "design"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjI0",
    "name": "Graph",
    "slug": "graph"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDU1",
    "name": "Simulation",
    "slug": "simulation"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjE0",
    "name": "Backtracking",
    "slug": "backtracking"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDY4",
    "name": "Prefix Sum",
    "slug": "prefix-sum"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDYy",
    "name": "Counting",
    "slug": "counting"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjU1ODIx",
    "name": "Sliding Window",
    "slug": "sliding-window"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjc=",
    "name": "Linked List",
    "slug": "linked-list"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjIz",
    "name": "Union Find",
    "slug": "union-find"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjMx",
    "name": "Recursion",
    "slug": "recursion"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDcw",
    "name": "Ordered Set",
    "slug": "ordered-set"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDU0",
    "name": "Monotonic Stack",
    "slug": "monotonic-stack"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjMw",
    "name": "Binary Search Tree",
    "slug": "binary-search-tree"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjI3",
    "name": "Trie",
    "slug": "trie"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjEy",
    "name": "Divide and Conquer",
    "slug": "divide-and-conquer"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDc4",
    "name": "Bitmask",
    "slug": "bitmask"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjM0",
    "name": "Queue",
    "slug": "queue"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDY2",
    "name": "Enumeration",
    "slug": "enumeration"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjM4",
    "name": "Geometry",
    "slug": "geometry"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjMz",
    "name": "Memoization",
    "slug": "memoization"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjI5",
    "name": "Segment Tree",
    "slug": "segment-tree"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDcz",
    "name": "Game Theory",
    "slug": "game-theory"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDY1",
    "name": "Hash Function",
    "slug": "hash-function"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjI2",
    "name": "Topological Sort",
    "slug": "topological-sort"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjI4",
    "name": "Binary Indexed Tree",
    "slug": "binary-indexed-tree"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDU5",
    "name": "Interactive",
    "slug": "interactive"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDYz",
    "name": "Data Stream",
    "slug": "data-stream"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDUy",
    "name": "String Matching",
    "slug": "string-matching"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjU2NTk4",
    "name": "Rolling Hash",
    "slug": "rolling-hash"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDc2",
    "name": "Shortest Path",
    "slug": "shortest-path"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDU2",
    "name": "Combinatorics",
    "slug": "combinatorics"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDc1",
    "name": "Randomized",
    "slug": "randomized"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDY3",
    "name": "Number Theory",
    "slug": "number-theory"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDcx",
    "name": "Monotonic Queue",
    "slug": "monotonic-queue"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDY0",
    "name": "Iterator",
    "slug": "iterator"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDUx",
    "name": "Merge Sort",
    "slug": "merge-sort"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDQ1",
    "name": "Concurrency",
    "slug": "concurrency"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjMy",
    "name": "Brainteaser",
    "slug": "brainteaser"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDc5",
    "name": "Probability and Statistics",
    "slug": "probability-and-statistics"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDU4",
    "name": "Doubly-Linked List",
    "slug": "doubly-linked-list"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDY5",
    "name": "Quickselect",
    "slug": "quickselect"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDYw",
    "name": "Bucket Sort",
    "slug": "bucket-sort"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjU2Njk4",
    "name": "Suffix Array",
    "slug": "suffix-array"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDgz",
    "name": "Minimum Spanning Tree",
    "slug": "minimum-spanning-tree"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDcy",
    "name": "Counting Sort",
    "slug": "counting-sort"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDQ0",
    "name": "Shell",
    "slug": "shell"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjU2MTE5",
    "name": "Line Sweep",
    "slug": "line-sweep"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjM2",
    "name": "Reservoir Sampling",
    "slug": "reservoir-sampling"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDc0",
    "name": "Eulerian Circuit",
    "slug": "eulerian-circuit"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDg1",
    "name": "Strongly Connected Component",
    "slug": "strongly-connected-component"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDYx",
    "name": "Radix Sort",
    "slug": "radix-sort"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjU0NTY5",
    "name": "Rejection Sampling",
    "slug": "rejection-sampling"
  },
  {
    "id": "VG9waWNUYWdOb2RlOjYxMDg0",
    "name": "Biconnected Component",
    "slug": "biconnected-component"
  }
]
